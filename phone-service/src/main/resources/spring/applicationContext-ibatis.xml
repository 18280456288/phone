<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/jdbcConfig.properties</value>
				<value>classpath:properties/redis.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="defaultAutoCommit" value="${defaultAutoCommit}" />

		<property name="filters" value="${filters}" />
<!-- 		<property name="connectionProperties" value="${connectionProperties}" /> -->

		<property name="maxActive" value="${maxActive}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="minIdle" value="${minIdle}" />

		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="maxEvictableIdleTimeMillis" value="${maxEvictableIdleTimeMillis}" />
		<property name="phyTimeoutMillis" value="${phyTimeoutMillis}" />

		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="poolPreparedStatements" value="${poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
<!--     	<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" /> -->
<!--     	<property name="proxyFilters"> -->
<!-- 	        <list> -->
<!-- 	            <ref bean="stat-filter" /> -->
<!-- 	        </list> -->
<!-- 	    </property> -->
	</bean>
<!-- 	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter"> -->
<!-- 	    <property name="slowSqlMillis" value="10000" /> -->
<!-- 	    <property name="logSlowSql" value="true" /> -->
<!-- 	</bean> -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="typeAliasesPackage" value="com.ly.base.core.model" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/*/*Mapper.xml</value>
				<value>classpath:mapper/*Mapper.xml</value>
			</list>
		</property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=false
							pageSizeZero=true
						</value>
					</property>
				</bean>
			</array>
		</property>

	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ly.base.dao" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- 	<tx:advice> -->
<!-- 		<tx:attributes></tx:attributes> -->
<!-- 	</tx:advice> -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/> -->

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
	</bean>

	<bean id="freeMarkerConfiguration"
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="classpath:template" />
	</bean>
</beans>